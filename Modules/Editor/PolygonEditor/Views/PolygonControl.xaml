<UserControl x:Class="PolygonEditor.PolygonControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:catel="http://schemas.catelproject.com"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PolygonEditor"
			 xmlns:ikriv="clr-namespace:IKriv.Wpf"
             mc:Ignorable="d" 
             d:DesignHeight="420" d:DesignWidth="800"
			 x:Name="PolygonUserControl">

	<UserControl.Resources>
		<local:PointCollectionConverter x:Key="mcolconv" />
		<ikriv:MathConverter x:Key="MathConverter" />
		<Color x:Key="BackColor">#444444</Color>
		<BooleanToVisibilityConverter x:Key="BoolToVis" />
		<local:ColorToSolidColorBrushValueConverter  x:Key="ColorToSolidColorBrush_ValueConverter"/>
	</UserControl.Resources>

	<Grid HorizontalAlignment="Left" VerticalAlignment="Top">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="Auto"></ColumnDefinition>
			<ColumnDefinition Width="Auto"></ColumnDefinition>
		</Grid.ColumnDefinitions>

		<!--AutoGeneratingColumn="DG1_AutoGeneratingColumn"-->
		<DataGrid Name="dgSimple" Grid.Column="1" AutoGenerateColumns="False" DataContext="Binding Path=SelectedPoints">
			<DataGrid.Columns>
				<DataGridTextColumn Header="X" Width="50">
					<DataGridTextColumn.Binding>
						<Binding Path="X" UpdateSourceTrigger="LostFocus">
							<Binding.ValidationRules>
								<local:XYValidationRule Width="880"/>
							</Binding.ValidationRules>
						</Binding>
					</DataGridTextColumn.Binding>
				</DataGridTextColumn> 
				<DataGridTextColumn Header="Y" Binding="{Binding Y, ValidatesOnExceptions=True}" Width="50"/>
			</DataGrid.Columns>
			<DataGrid.RowValidationErrorTemplate>
				<ControlTemplate>
					<Grid Margin="0,-2,0,-2"
					ToolTip="{Binding RelativeSource={RelativeSource
					FindAncestor, AncestorType={x:Type DataGridRow}},
					Path=(Validation.Errors)[0].ErrorContent}">
						<Ellipse StrokeThickness="0" Fill="Red" 
					Width="{TemplateBinding FontSize}" 
					Height="{TemplateBinding FontSize}" />
						<TextBlock Text="!" FontSize="{TemplateBinding FontSize}" 
					FontWeight="Bold" Foreground="White" 
					HorizontalAlignment="Center"  />
					</Grid>
				</ControlTemplate>
			</DataGrid.RowValidationErrorTemplate>
		</DataGrid>

		<!--   
		Width="880"
	    Height="420"							
		-->

		<local:PolygonCanvas  x:Name="canvas" 
             MouseMove="Canvas_MouseMove" 
             MouseLeftButtonDown="Canvas_MouseLeftButtonDown"  		     
             MouseLeftButtonUp="Canvas_MouseLeftButtonUp"
			 MouseEnter="Canvas_MouseEnter"
			 Width="880"
	         Height="420">
			
			<!--
			 Width="{Binding RelativeSource=
				{RelativeSource FindAncestor,
                 AncestorType={x:Type UserControl}},
                 Path=ActualWidth,
			     Converter={ikriv:MathConverter}, ConverterParameter=x-620}"
			Height="{Binding RelativeSource=
                {RelativeSource FindAncestor,
                 AncestorType={x:Type UserControl}},
                 Path=ActualHeight}"		
				 Grid.Column="0">
			-->
			
			

			<Canvas.Background>
				<SolidColorBrush Color="#444444" Opacity="1"/>
			</Canvas.Background>

			<!--
			<Polygon Name="SpeechPoly" Stroke="Black" StrokeThickness="2" 
             Points="{Binding Path=VM.Polygon.PointCollection, Converter={StaticResource mcolconv}}" 
	         Visibility = "{Binding Path =VM.Polygon.Visibility}"/>
			-->


			<Line X1="{Binding Path=PreviousPointMoving.X}"
				  Y1="{Binding Path=PreviousPointMoving.Y}"
				  X2="{Binding Path=PointMoving.X}" 
                  Y2="{Binding Path=PointMoving.Y}"
				  Stroke="LightGray" StrokeThickness="1" StrokeDashArray="2 2"
				  Visibility="{Binding Path=MovingPointVisibility, Converter={StaticResource BoolToVis}}"/>

			<Line X1="{Binding Path=PointMoving.X}"
				  Y1="{Binding Path=PointMoving.Y}"
				  X2="{Binding Path=NextPointMoving.X}" 
                  Y2="{Binding Path=NextPointMoving.Y}"
				  Stroke="LightGray" StrokeThickness="1" StrokeDashArray="2 2"
				  Visibility="{Binding Path=MovingPointVisibility, Converter={StaticResource BoolToVis}}"/>

			<Rectangle
				Width="6"
				Height="6"
				Stroke="LightGray"
				Fill="LightGray"
				Canvas.Left="{Binding Path=PointMoving.X, Converter={ikriv:MathConverter}, ConverterParameter=x-3}"
				Canvas.Top="{Binding Path=PointMoving.Y, Converter={ikriv:MathConverter}, ConverterParameter=x-3}" 
				Visibility="{Binding Path=MovingPointVisibility, Converter={StaticResource BoolToVis}}"/>

			<!--
			<Rectangle
				Width="16"
				Height="16"
				Stroke="Red"
				Canvas.Left="{Binding Path=VM.SelectedPolygon.SelectedVertex.X, Converter={ikriv:MathConverter}, ConverterParameter=x-8}"
				Canvas.Top="{Binding Path=VM.SelectedPolygon.SelectedVertex.Y, Converter={ikriv:MathConverter}, ConverterParameter=x-8}" 
				Visibility="{Binding Path=VM.SelectedPolygon.SelectedVertexVisibility, Converter={StaticResource BoolToVis}}"/>
			-->

		</local:PolygonCanvas>




		<!-- New -->

		<ItemsControl ItemsSource="{Binding Polygons}" Grid.Column="0">
			<ItemsControl.ItemsPanel>
				<ItemsPanelTemplate>
					<Canvas></Canvas>
				</ItemsPanelTemplate>
			</ItemsControl.ItemsPanel>

			<ItemsControl.ItemTemplate>
				<DataTemplate>
					<Grid>
						<Polygon Name="SpeechPoly" Stroke="Black" StrokeThickness="2" 
							Points="{Binding PointCollection, Converter={StaticResource mcolconv}}" 
							Visibility = "{Binding Visibility, Converter={StaticResource BoolToVis}}"
						    IsHitTestVisible="False"/>

						<Line X1="{Binding CenterPoint.X, Converter={ikriv:MathConverter}, ConverterParameter=x-20}"
							  Y1="{Binding CenterPoint.Y }"
							  X2="{Binding CenterPoint.X, Converter={ikriv:MathConverter}, ConverterParameter=x+20}" 
							  Y2="{Binding CenterPoint.Y }"
							  Stroke="{Binding CenterPointColor, Converter={StaticResource ColorToSolidColorBrush_ValueConverter}}" StrokeThickness="1"
							  Visibility="{Binding Visibility, Converter={StaticResource BoolToVis}}"
							  IsHitTestVisible="False"/>

						<Line X1="{Binding CenterPoint.X}"
						      Y1="{Binding CenterPoint.Y, Converter={ikriv:MathConverter}, ConverterParameter=x-20}"
							  X2="{Binding CenterPoint.X}" 
							  Y2="{Binding CenterPoint.Y, Converter={ikriv:MathConverter}, ConverterParameter=x+20}"
							  Stroke="{Binding CenterPointColor, Converter={StaticResource ColorToSolidColorBrush_ValueConverter}}" StrokeThickness="1" 
							  Visibility="{Binding Visibility, Converter={StaticResource BoolToVis}}"
							  IsHitTestVisible="False"/>

						<ItemsControl ItemsSource="{Binding Segments}"
						    Visibility="{Binding Path=SegmentsVisible, Converter={StaticResource BoolToVis}}">
							<!-- <Visibility="{Binding SegmentsVisible}"> -->

							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<Canvas></Canvas>
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>

							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<Line Stroke="Black" StrokeThickness="1" IsHitTestVisible="False"
									X1="{Binding Item1.X}"
									Y1="{Binding Item1.Y}"
									X2="{Binding Item2.X}"
									Y2="{Binding Item2.Y}" />
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
						<!-- Begin Child ItemsControl-->
						<ItemsControl ItemsSource="{Binding PointCollection}">
							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<Canvas></Canvas>
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<Rectangle Width="6" Height="6" 
											   Stroke="{Binding Color, Converter={StaticResource ColorToSolidColorBrush_ValueConverter}}" 
											   Fill="{Binding Color, Converter={StaticResource ColorToSolidColorBrush_ValueConverter}}"
											   IsHitTestVisible="False"/>
								</DataTemplate>
							</ItemsControl.ItemTemplate>

							<ItemsControl.ItemContainerStyle>
								<Style>
									<Setter Property="Canvas.Left" Value="{Binding X, Converter={ikriv:MathConverter}, ConverterParameter=x-3}"/>
									<Setter Property="Canvas.Top" Value="{Binding Y, Converter={ikriv:MathConverter}, ConverterParameter=x-3}"/>
								</Style>
							</ItemsControl.ItemContainerStyle>
						</ItemsControl>
						<!-- End Child Items Control -->

						<!-- Begin Child ItemsControl (Selected Points) -->
						<!--
						<ItemsControl ItemsSource="{Binding PointCollection}">
							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<Canvas></Canvas>
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<Rectangle 
										Width="16" 
										Height="16" 
										Stroke="Red" 
										IsHitTestVisible="False"
										Visibility="{Binding Path=Selected, Converter={StaticResource BoolToVis}}"/>
								</DataTemplate>
							</ItemsControl.ItemTemplate>

							<ItemsControl.ItemContainerStyle>
								<Style>
									<Setter Property="Canvas.Left" Value="{Binding X, Converter={ikriv:MathConverter}, ConverterParameter=x-8}"/>
									<Setter Property="Canvas.Top" Value="{Binding Y, Converter={ikriv:MathConverter}, ConverterParameter=x-8}"/>
								</Style>
							</ItemsControl.ItemContainerStyle>
						</ItemsControl>
						-->
						<!-- End Child Items Control -->

					</Grid>
				</DataTemplate>
			</ItemsControl.ItemTemplate>
			<!--			
			<ItemsControl.ItemContainerStyle>
				<Style>
					<Setter Property="Canvas.Left" Value="{Binding X, Converter={ikriv:MathConverter}, ConverterParameter=x-3}"/>
					<Setter Property="Canvas.Top" Value="{Binding Y, Converter={ikriv:MathConverter}, ConverterParameter=x-3}"/>
				</Style>
			</ItemsControl.ItemContainerStyle>
			-->
		</ItemsControl>
	</Grid>
</UserControl>
